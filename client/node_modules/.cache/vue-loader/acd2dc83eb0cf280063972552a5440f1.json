{"remainingRequest":"C:\\Users\\omar othman\\Desktop\\software enigineering project\\project\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\omar othman\\Desktop\\software enigineering project\\project\\client\\src\\components\\ordercomponent.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\omar othman\\Desktop\\software enigineering project\\project\\client\\src\\components\\ordercomponent.vue","mtime":1640824212679},{"path":"C:\\Users\\omar othman\\Desktop\\software enigineering project\\project\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1640824196610},{"path":"C:\\Users\\omar othman\\Desktop\\software enigineering project\\project\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1640824211656},{"path":"C:\\Users\\omar othman\\Desktop\\software enigineering project\\project\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1640824205339},{"path":"C:\\Users\\omar othman\\Desktop\\software enigineering project\\project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640824194422},{"path":"C:\\Users\\omar othman\\Desktop\\software enigineering project\\project\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1640824211654}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KbGFiZWwuYnRuLmJ0bi1wcmltYXJ5Lm0tMi5hY3RpdmUgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjsNCn0NCnVsLmRlc2NyaXB0aW9uIHsNCiAgcGFkZGluZzogMHB4IDBweCAwcHggNXB4Ow0KICBmb250LXNpemU6IDAuOWVtOw0KfQ0KbGkudmVyaWZpZWQgew0KICBsaXN0LXN0eWxlLXR5cGU6IG5vbmUgIWltcG9ydGFudDsNCn0NCmxpLnZlcmlmaWVkOjpiZWZvcmUgew0KICBjb250ZW50OiAiXGYwNTgiOyAvKiBGb250QXdlc29tZSBVbmljb2RlICovDQogIGZvbnQtZmFtaWx5OiBGb250QXdlc29tZTsNCiAgbWFyZ2luLXJpZ2h0OiA1cHg7DQogIGNvbG9yOiBncmVlbjsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KfQ0KLnNjYW4tYnRuIHsNCiAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KYnV0dG9uLnd3LWZ1bGZpbGwuYnRuLmJ0bi1zZWNvbmRhcnkgew0KICAgIG1hcmdpbi1yaWdodDogMzAlOw0KfQ0KLmN1c3RvbS50aXRsZS5kLWZsZXggew0KICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCg=="},{"version":3,"sources":["ordercomponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ordercomponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <tr>\r\n    <th scope=\"row\">{{ id }}</th>\r\n    <td>${{ total_price }}</td>\r\n    <td>{{ customer }}</td>\r\n    <td>{{ country }}</td>\r\n    <td>\r\n      <div v-for=\"(item, index) in itemSku\" :key=\"index\">{{ item }}</div>\r\n    </td>\r\n    <td>\r\n      <div v-for=\"(singleDescription, index) in description\" :key=\"index\">\r\n        {{ singleDescription }}\r\n      </div>\r\n    </td>\r\n\r\n    <div>\r\n      <!-- Button trigger modal -->\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        data-toggle=\"modal\"\r\n        :data-target=\"'#modal' + id.replace('#', '')\"\r\n        @click=\"autoFocus\"\r\n      >\r\n        fulfill\r\n      </button>\r\n\r\n      <!-- Modal -->\r\n      <div\r\n        class=\"modal fade\"\r\n        :id=\"'modal' + id.replace('#', '')\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <div class=\"custom title d-flex\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">order {{ id }}</h5>\r\n              <h5>{{ country }}</h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n              \r\n            </div>\r\n            \r\n            <div class=\"modal-body\">\r\n              <div class=\"input-group input-group-sm mb-3\">\r\n                <input\r\n                  id=\"inputField\"\r\n                  v-on:keyup.enter=\"scanBarcode1\"\r\n                  type=\"text\"\r\n                  class=\"form-control input-field\"\r\n                  aria-label=\"Sizing example input\"\r\n                  aria-describedby=\"inputGroup-sizing-sm\"\r\n                  v-model=\"barcode\"\r\n                  autofocus\r\n                />\r\n                <div class=\"input-group-prepend\">\r\n                  <span\r\n                    class=\"input-group-text scan-btn\"\r\n                    id=\"inputGroup-sizing-sm\"\r\n                    @click=\"scanBarcode2\"\r\n                    >scan barcode</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <ul class=\"description\">\r\n                <li\r\n                  v-for=\"(singleDescription, index) in description\"\r\n                  :key=\"index\"\r\n                  :id=\"'item'+index\"\r\n                >\r\n                  {{ singleDescription }}\r\n                </li>\r\n              </ul>\r\n              <div\r\n                v-if=\"this.itemSku.length == verifiedBarcodes.length\"\r\n                class=\"alert alert-success\"\r\n                role=\"alert\"\r\n              >\r\n                all items are verified\r\n              </div>\r\n              <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n                <label class=\"btn btn-primary active m-2\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option1\"\r\n                    value=\"0.5\"\r\n                    v-model=\"datasetting.weight.value\"\r\n                    checked\r\n                  />\r\n                  micro\r\n                </label>\r\n                <label class=\"btn btn-primary m-2\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option2\"\r\n                    value=\"1\"\r\n                    v-model=\"datasetting.weight.value\"\r\n                  />\r\n                  mini\r\n                </label>\r\n                <label class=\"btn btn-primary m-2\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"options\"\r\n                    id=\"option3\"\r\n                    value=\"5\"\r\n                    v-model=\"datasetting.weight.value\"\r\n                  />\r\n                  small\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button\r\n                v-if=\"this.itemSku.length == verifiedBarcodes.length\"\r\n                type=\"button\"\r\n                class=\"ww-fulfill btn btn-secondary\"\r\n                @click=\"fulfillSheetsOnly\"\r\n              >\r\n                fulfill worldwide\r\n              </button>\r\n              <button v-else type=\"button\" class=\"ww-fulfill btn btn-secondary\" disabled>\r\n                fulfill worldwide\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n                @click=\"rerenderComponent\"\r\n              >\r\n                discard\r\n              </button>\r\n              <button\r\n                v-if=\"this.itemSku.length == verifiedBarcodes.length\"\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                @click=\"created\"\r\n              >\r\n                get label\r\n              </button>\r\n              <button v-else type=\"button\" class=\"btn btn-primary\" disabled>\r\n                get label\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </tr>\r\n</template>\r\n<style>\r\nlabel.btn.btn-primary.m-2.active {\r\n  background-color: green;\r\n}\r\nul.description {\r\n  padding: 0px 0px 0px 5px;\r\n  font-size: 0.9em;\r\n}\r\nli.verified {\r\n  list-style-type: none !important;\r\n}\r\nli.verified::before {\r\n  content: \"\\f058\"; /* FontAwesome Unicode */\r\n  font-family: FontAwesome;\r\n  margin-right: 5px;\r\n  color: green;\r\n  display: inline-block;\r\n}\r\n.scan-btn {\r\n  cursor: pointer;\r\n}\r\nbutton.ww-fulfill.btn.btn-secondary {\r\n    margin-right: 30%;\r\n}\r\n.custom.title.d-flex {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n</style>\r\n<script>\r\nconst endpoint = \"http://localhost:8081/\";\r\nimport axios from \"axios\";\r\nimport vueAxios from \"vue-axios\";\r\nimport Vue from \"vue\";\r\nVue.use(vueAxios, axios);\r\nexport default {\r\n  data: function () {\r\n    return {\r\n      date: new Date(),\r\n      today: \"\",\r\n      barcode: null,\r\n      tracking_url: null,\r\n      trackingNo: null,\r\n      verifiedBarcodes: [],\r\n      datasetting: {\r\n        pickup_date: this.today,\r\n        first_mile_option: \"pickup\",\r\n        description: `${this.id}`,\r\n        weight: {\r\n          value: \"0.5\",\r\n          units: \"lb\",\r\n        },\r\n        customer_reference: this.id,\r\n        metadata: {\r\n          your_data: \"XYZ123\",\r\n        },\r\n        sender: {\r\n          contact: {\r\n            name: \"Molly and Stitch\",\r\n            phone: \"+1 (424) 777-2110\",\r\n            company: \"Molly and Stitch US\",\r\n          },\r\n          address: {\r\n            address_line1: \"1272 winchester ave\",\r\n            suburb: \"Glendale\",\r\n            state_name: \"California\",\r\n            postcode: \"91201\",\r\n            country: \"USA\",\r\n          },\r\n        },\r\n        receiver: {\r\n          instructions: \"no instructions\",\r\n          contact: {\r\n            name: `${this.customer}`,\r\n          },\r\n          address: {\r\n            //shipping address\r\n            address_line1: this.destination1,\r\n            address_line2: this.destination2,\r\n            state_name: this.state,\r\n            suburb: this.city,\r\n            postcode: this.zip,\r\n            country: this.country,\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    autoFocus(e) {\r\n      e.target.parentElement.children[1].children[0].children[0].children[1].children[0].children[0].focus();\r\n    },\r\n   \r\n    rerenderComponent(e) {\r\n      this.barcode = null;\r\n      this.verifiedBarcodes = [];\r\n      for (\r\n        var listCount = 0;\r\n        listCount <\r\n        e.target.parentElement.parentElement.children[1].children[1].children\r\n          .length;\r\n        listCount++\r\n      ) {\r\n        e.target.parentElement.parentElement.children[1].children[1].children[\r\n          listCount\r\n        ].classList.remove(\"verified\");\r\n      }\r\n    },\r\n\r\n    scanBarcode1(event) {\r\n      for (var index = 0; index < this.itemSku.length; index++) {\r\n        if (this.barcode == this.itemSku[index]) {\r\n          var count1 = 0;\r\n          for (var counter1 = 0; counter1 < this.itemSku.length; ++counter1) {\r\n            if (this.itemSku[counter1] == this.barcode) {\r\n              count1++;\r\n            }\r\n          }\r\n          var count2 = 0;\r\n          for (\r\n            var counter2 = 0;\r\n            counter2 < this.verifiedBarcodes.length;\r\n            ++counter2\r\n          ) {\r\n            if (this.verifiedBarcodes[counter2] == this.barcode) {\r\n              count2++;\r\n            }\r\n          }\r\n          if (count1 > count2) {\r\n            this.verifiedBarcodes.push(this.itemSku[index]);\r\n            this.barcode = \"\";\r\n\r\n              if(event.target.parentElement.parentElement.children[1].children[index].classList[0] != \"verified\"){\r\n                event.target.parentElement.parentElement.children[1].children[index].classList.add(\"verified\"); \r\n              }\r\n              else if(event.target.parentElement.parentElement.children[1].children[index].classList[0] == \"verified\" && \r\n              event.target.parentElement.parentElement.children[1].children[index+1].classList[0] != \"verified\"){\r\n                event.target.parentElement.parentElement.children[1].children[index+1].classList.add(\"verified\"); \r\n              }\r\n              else if(event.target.parentElement.parentElement.children[1].children[index+1].classList[0] == \"verified\" &&\r\n              event.target.parentElement.parentElement.children[1].children[index+2].classList[0] != \"verified\"\r\n              ){\r\n                event.target.parentElement.parentElement.children[1].children[index+2].classList.add(\"verified\"); \r\n              }\r\n              else if(event.target.parentElement.parentElement.children[1].children[index+2].classList[0] == \"verified\" &&\r\n              event.target.parentElement.parentElement.children[1].children[index+3].classList[0] != \"verified\"\r\n              ){\r\n                event.target.parentElement.parentElement.children[1].children[index+3].classList.add(\"verified\"); \r\n              }\r\n              else{\r\n              event.target.parentElement.parentElement.children[1].children[index].classList.add(\"verified\");                \r\n              }\r\n\r\n            console.log(event.target.parentElement.parentElement.children[1].children[\r\n              index\r\n            ].classList, event.target.parentElement.parentElement.children[1].children[\r\n              index\r\n            ].getAttribute(\"id\"))\r\n\r\n            event.target.focus();\r\n          } else {\r\n            alert(`item #${this.barcode}  already verified`);\r\n            this.barcode = \"\";\r\n            event.target.parentElement.parentElement.children[0].focus();\r\n          }\r\n        } else if (JSON.stringify(this.itemSku).search(this.barcode) == -1) {\r\n          alert(\"none of the items have the same barcode\");\r\n          this.barcode = \"\";\r\n          event.target.parentElement.parentElement.children[0].focus();\r\n        }\r\n      }\r\n    },\r\n    scanBarcode2(event) {\r\n      for (var index = 0; index < this.itemSku.length; index++) {\r\n        if (this.barcode == this.itemSku[index]) {\r\n          var count1 = 0;\r\n          for (var counter1 = 0; counter1 < this.itemSku.length; ++counter1) {\r\n            if (this.itemSku[counter1] == this.barcode) {\r\n              count1++;\r\n            }\r\n          }\r\n          var count2 = 0;\r\n          for (\r\n            var counter2 = 0;\r\n            counter2 < this.verifiedBarcodes.length;\r\n            ++counter2\r\n          ) {\r\n            if (this.verifiedBarcodes[counter2] == this.barcode) {\r\n              count2++;\r\n            }\r\n          }\r\n          if (count1 > count2) {\r\n            this.verifiedBarcodes.push(this.itemSku[index]);\r\n            this.barcode = \"\";\r\n            event.target.parentElement.parentElement.nextSibling.children[\r\n              index\r\n            ].classList.add(\"verified\");\r\n            event.target.parentElement.parentElement.children[0].focus();\r\n          } else {\r\n            alert(`item #${this.barcode}  already verified`);\r\n            this.barcode = \"\";\r\n            event.target.parentElement.parentElement.children[0].focus();\r\n          }\r\n        } else if (JSON.stringify(this.itemSku).search(this.barcode) == -1) {\r\n          alert(\"none of the items have the same barcode\");\r\n          this.barcode = \"\";\r\n          event.target.parentElement.parentElement.children[0].focus();\r\n        }\r\n      }\r\n    },\r\n     fulfillSheetsOnly(event){\r\n         Vue.axios\r\n        .get(endpoint + \"fulfillSheets\", {\r\n          params: { data: JSON.stringify(this.verifiedBarcodes) },\r\n        })\r\n        .then((response) => response)\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n        event.target.innerHTML = \"order fulfilled\";\r\n        event.target.setAttribute(\"disabled\", \"true\");\r\n     },\r\n    created(event) {\r\n      // GET request using axios with error handling\r\n      this.today =\r\n        this.date.getFullYear() +\r\n        \"-\" +\r\n        (this.date.getMonth() + 1) +\r\n        \"-\" +\r\n        this.date.getDate();\r\n     \r\n      Vue.axios\r\n        .get(endpoint + \"updateData/\", {\r\n          params: { data: JSON.stringify(this.datasetting) },\r\n        })\r\n        .then((response) => {\r\n          if(response.data.body.response.indexOf(\"message\") != -1){\r\n            alert('sendle error' + response.data.body.response);\r\n          }else{\r\n          this.tracking_url = response.data.body.url;\r\n          this.trackingNo = response.data.body.trackingNo;\r\n          window.open(response.data.body.label, \"_blank\");\r\n          event.target.innerHTML = \"order fulfilled\";\r\n          event.target.setAttribute(\"disabled\", \"true\");\r\n          var btn = document.createElement(\"a\");\r\n          btn.innerHTML = \"label\";\r\n          btn.setAttribute(\"href\", response.data.body.label);\r\n          btn.setAttribute(\"target\", \"_blank\");\r\n          event.target.parentElement.appendChild(btn);\r\n          //mark fulfilled\r\n          Vue.axios\r\n            .get(endpoint + \"markFulfilled\", {\r\n              params: {\r\n                fulfillingDate : this.date.getFullYear() +\r\n                \"-\" +\r\n                (this.date.getMonth() + 1) +\r\n                \"-\" +\r\n                this.date.getDate(),\r\n                orderid: JSON.stringify(this.orderNumber),\r\n                totalPrice : JSON.stringify(this.total_price),\r\n                customer : JSON.stringify(this.customer),\r\n                destination : JSON.stringify(this.country),\r\n                itemsSku : JSON.stringify(this.itemSku),\r\n                description : JSON.stringify(this.description),\r\n                label : response.data.body.label,\r\n              },\r\n            });\r\n          Vue.axios\r\n            .get(endpoint + \"fulfillShopify\", {\r\n              params: {\r\n                orderid: JSON.stringify(this.orderNumber),\r\n                trackingUrl: this.tracking_url,\r\n                trackingNo: this.trackingNo,\r\n              },\r\n            })\r\n            .then((response) => {\r\n              if (response.data.data.response.indexOf(\"errors\") != -1) {\r\n                alert(\r\n                  \"error fulfilling order\" + \" \" + response.data.data.response\r\n                );\r\n              }else {\r\n                Vue.axios\r\n        .get(endpoint + \"fulfillSheets\", {\r\n          params: { data: JSON.stringify(this.verifiedBarcodes) },\r\n        })\r\n        .then((response) => response)\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              alert(\"fulfillment failed\" + \" \" + error);\r\n              console.error(\"There was an error!\", error);\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n      \r\n    },\r\n  },\r\n  props: [\r\n    \"id\",\r\n    \"total_price\",\r\n    \"customer\",\r\n    \"destination1\",\r\n    \"destination2\",\r\n    \"itemSku\",\r\n    \"description\",\r\n    \"orderNumber\",\r\n    \"zip\",\r\n    \"country\",\r\n    \"state\",\r\n    \"city\",\r\n  ],\r\n  name: \"orderComponent\",\r\n};\r\n</script>\r\n"]}]}